# Generated by Django 5.0.1 on 2025-09-24 04:29

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('cliente_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tipo_doc', models.CharField(choices=[('CC', 'Cédula de Ciudadanía'), ('CE', 'Cédula de Extranjería'), ('TI', 'Tarjeta de Identidad'), ('PP', 'Pasaporte')], help_text='Tipo de documento de identificación', max_length=2)),
                ('num_doc', models.CharField(help_text='Número de documento', max_length=20)),
                ('nombre', models.CharField(help_text='Nombre completo del cliente', max_length=100)),
                ('ciudad', models.CharField(blank=True, help_text='Ciudad de residencia', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'core.clientes',
                'unique_together': {('tipo_doc', 'num_doc')},
            },
        ),
        migrations.CreateModel(
            name='Credito',
            fields=[
                ('credito_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('producto', models.CharField(choices=[('e-bike', 'E-Bike'), ('e-moped', 'E-Moped')], help_text='Tipo de producto financiado', max_length=10)),
                ('inversion', models.DecimalField(decimal_places=2, help_text='Valor total del crédito', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('cuotas_totales', models.PositiveIntegerField(help_text='Número total de cuotas', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)])),
                ('tea', models.DecimalField(decimal_places=6, help_text='Tasa Efectiva Anual', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('1.00'))])),
                ('fecha_desembolso', models.DateField(help_text='Fecha de desembolso del crédito')),
                ('fecha_inicio_pago', models.DateField(help_text='Fecha de inicio de pagos')),
                ('estado', models.CharField(choices=[('vigente', 'Vigente'), ('cancelado', 'Cancelado'), ('castigado', 'Castigado')], default='vigente', help_text='Estado actual del crédito', max_length=10)),
                ('cliente', models.ForeignKey(help_text='Cliente propietario del crédito', on_delete=django.db.models.deletion.CASCADE, related_name='creditos', to='core.cliente')),
            ],
            options={
                'verbose_name': 'Crédito',
                'verbose_name_plural': 'Créditos',
                'db_table': 'core.creditos',
            },
        ),
        migrations.CreateModel(
            name='PaymentSchedule',
            fields=[
                ('schedule_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_cuota', models.PositiveIntegerField(help_text='Número de cuota', validators=[django.core.validators.MinValueValidator(1)])),
                ('fecha_vencimiento', models.DateField(help_text='Fecha de vencimiento de la cuota')),
                ('valor_cuota', models.DecimalField(decimal_places=2, help_text='Valor de la cuota', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('parcial', 'Pago Parcial'), ('pagada', 'Pagada'), ('vencida', 'Vencida')], default='pendiente', help_text='Estado actual de la cuota', max_length=10)),
                ('credito', models.ForeignKey(help_text='Crédito al que pertenece la cuota', on_delete=django.db.models.deletion.CASCADE, related_name='payment_schedules', to='core.credito')),
            ],
            options={
                'verbose_name': 'Cronograma de Pago',
                'verbose_name_plural': 'Cronogramas de Pago',
                'db_table': 'core.payment_schedule',
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('pago_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('fecha_pago', models.DateTimeField(help_text='Fecha y hora del pago')),
                ('monto', models.DecimalField(decimal_places=2, help_text='Monto del pago', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('medio', models.CharField(blank=True, choices=[('app', 'App Móvil'), ('efectivo', 'Efectivo'), ('link', 'Link de Pago'), ('transferencia', 'Transferencia Bancaria'), ('tarjeta', 'Tarjeta de Crédito/Débito')], help_text='Medio utilizado para el pago', max_length=20, null=True)),
                ('schedule', models.ForeignKey(help_text='Cuota a la que pertenece el pago', on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='core.paymentschedule')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'db_table': 'core.pagos',
            },
        ),
        migrations.AddIndex(
            model_name='paymentschedule',
            index=models.Index(fields=['credito', 'num_cuota'], name='core.paymen_credito_07dd53_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='paymentschedule',
            unique_together={('credito', 'num_cuota')},
        ),
        migrations.AddIndex(
            model_name='pago',
            index=models.Index(fields=['schedule', 'fecha_pago'], name='core.pagos_schedul_42e146_idx'),
        ),
    ]
